rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to get authenticated user
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to get the user's role
    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }
    
    // Helper function to verify user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Cart collection
    match /cart/{cartId} {
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    // Products collection
    match /products/{productId} {
      allow read: if true;
      allow write: if isAuthenticated() && getUserRole() == 'admin';
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated() && request.auth.uid == userId;
      allow write: if isAuthenticated() && request.auth.uid == userId;
    }
  }
}
